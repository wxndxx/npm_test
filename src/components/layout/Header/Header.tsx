'use client'

import Icon from '@/components/UI/Icon/Icon'
import Link from 'next/link'
import { usePathname, useRouter } from 'next/navigation'
import React, { useEffect, useRef, useState } from 'react'
import { useAppStore, useTypedDispatch, useTypedSelector } from '@/store/store'
import { MyStorage } from '@/utils/MyStorage'
import { setAuth, setModal, setModalLink } from '@/store/Slices/ProfileSlice'
import { basketService } from '@/services/busket.service'
import { onChangeBasket, onChangeStatus, onChangeSum } from '@/store/Slices/BasketSlice'
import { onChangeModal } from '@/store/Slices/HomeSlice'

type Props = {}

function Header({}: Props) {
    const router = useRouter();

    const handleClick = () => {
      router.push("/"); // Перенаправление на домашнюю страницу
    };

    const path = usePathname()
    const parts = path.split("/");
    const basepath = parts[1];

    const [isVisible, setIsVisible] = useState(false);
    const [prevScrollPos, setPrevScrollPos] = useState(0);
  
    useEffect(() => {
      const handleScroll = () => {
        const currentScrollPos = window.scrollY;
  
        const scrollingDown = currentScrollPos > prevScrollPos;
        const scrollingTop = currentScrollPos < prevScrollPos;
  
        if (scrollingDown) {
          setIsVisible(false);
        } else if (scrollingTop && currentScrollPos > 70){
            setIsVisible(true);
        } else {
            setIsVisible(false);
        }
  
        setPrevScrollPos(currentScrollPos);
      };
  
      window.addEventListener("scroll", handleScroll);
  
      return () => {
        window.removeEventListener("scroll", handleScroll);
      };
    }, [prevScrollPos]);
    const list = [
        {url: '/catalog', title: 'Каталог'},
        {url: '/our_works', title: 'Наши работы'},
        {url: '/portfolio', title: 'Ателье'},
        {url: '/documents?page=1', title: 'Документы'},
        {url: '/contacts', title: 'Контакты'},
    ];

    const dispatch = useTypedDispatch()
    const user = useTypedSelector(state => state.profile.user)
    const isAuth = useTypedSelector((state) => state.profile.isAuth)
    const {sum, basket} = useTypedSelector((state) => state.basket)
    //const [stateSum, setStateSum] = useState<number>(0)

    //const {basket} = useTypedSelector((state) => state.basket)
    
    useEffect(() => {
        isAuth ? setLoaded(true) : setLoaded(false)
        if(MyStorage.get('accessToken') && !user) {
            dispatch(setAuth(true))
        }
    }, [isAuth])
    // useEffect(() => {
    //     //basket ? dispatch(onChangeSum(basket.appointments_sum + basket.products_sum)) : dispatch(onChangeSum(0))
    // }, [basket])
    useEffect(() => {
        console.log(path)
        if(path != '/basket' && path != '/payment' && MyStorage.get('accessToken')) {
            basketService.getBusket()
            .then((res:any) => {
                dispatch(onChangeStatus(true))
                dispatch(onChangeBasket(res))
                dispatch(onChangeSum(res.appointments_sum + res.products_sum))
                //setStateSum(res.appointments_sum + res.products_sum)
            })
            .catch((err:any) => {
                console.log(err)
            })
        }
    }, [path, sum])
    const [loaded, setLoaded] = useState(false)

    function insertSpaces(number:string) {
        return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
    }

    const {modal} = useTypedSelector((state) => state.home)

    useEffect(() => {
        setClose(modal)
    }, [modal])

    const [close, setClose] = useState<boolean>()

    function closeFunc() {
        setClose(!close)
        dispatch(onChangeModal(!close))
    }

    const store = useAppStore()
    const initialized = useRef(false)
    if (!initialized.current) {
      store.dispatch(onChangeSum(sum))
      initialized.current = true
    }



    const HeaderContent = () => {
        return (
            <>
            <div className='xl:w-[1840px] py-[15px] px-[10px] l:px-[0px] w-[1360px] text-gray6'>
                <div className='h-full flex flex-col justify-between items-center w-full'>
                <div className=' justify-between w-full items-center  hidden l:flex'>
                    <div className='gap-[15px] pt-[10px] h-full justify-between items-center cursor-pointer flex' onClick={() => {
                        setClose(false)
                        dispatch(onChangeModal(false))
                        handleClick()
                    }}>
                        <svg width="200" height="34" viewBox="0 0 127 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <g clipPath="url(#clip0_90_1235)">
                            <path fillRule="evenodd" clipRule="evenodd" d="M8.95508 2.58858L21.3609 8.59315L33.4261 2.54426L33.5949 13.8797L21.3577 19.9847L18.1361 18.584L17.509 20.029L21.3482 22L35.2725 14.9198L35.1293 0L21.3482 7.08019L7.33789 0.01182L7.36018 14.843L15.93 19.0982L17.6172 18.3594L8.90732 14.0599L8.95508 2.58858Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M18.6803 6.22884L17.582 5.17982L27.9855 0.0351562L28.0205 4.12193L26.3428 4.65974V2.56464L18.6803 6.22884Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M15.411 17.269L15.1977 18.7347L16.0859 19.1898L14.023 20.1413L1.76362 14.0481L1.78591 2.55312L7.69755 5.4904L7.50654 3.58442L0.0477515 0L0 14.7868L13.9243 21.8877L19.4221 19.1425L15.411 17.269Z" fill="#51BEF9"/>
                            <path d="M42.7082 16.3983H41.6962V13.2149H37.418V12.4072H46.9772V13.202H42.7082V16.3983ZM55.8556 16.3983H47.6672V12.4072H55.8648V13.202H48.5274V13.9925H55.8648V14.7916H48.5274V15.5863H55.8648V16.3854L55.8556 16.3983ZM64.7523 16.3983H57.576C56.9044 16.3983 56.5732 16.0761 56.5732 15.4274V13.3566C56.5532 13.2291 56.5654 13.0991 56.6087 12.9767C56.6519 12.8544 56.7251 12.7431 56.8225 12.6518C56.9198 12.5605 57.0386 12.4916 57.1694 12.4506C57.3002 12.4097 57.4394 12.3977 57.576 12.4158H64.7615V13.2106H57.7692C57.724 13.2036 57.6777 13.2065 57.634 13.2191C57.5902 13.2318 57.5502 13.2538 57.5172 13.2834C57.4841 13.313 57.4589 13.3494 57.4436 13.3897C57.4282 13.43 57.4232 13.4731 57.4288 13.5156V15.2813C57.4288 15.4961 57.5392 15.6035 57.7554 15.6035H64.7615V16.4026L64.7523 16.3983ZM73.6445 16.3983H72.7935V14.8044H66.3118V16.3983H65.4654V12.4158H66.3118V13.9925H72.8027V12.4029H73.6537V16.3854L73.6445 16.3983ZM81.681 16.3983H82.5459V12.4244H81.6856V15.4618L75.204 12.4158H74.3437V16.4069H75.1948V13.3352L81.6672 16.3983H81.681ZM90.5824 15.2813V13.5629C90.5824 13.3395 90.4674 13.2278 90.242 13.2278H84.4458C84.3999 13.2214 84.3531 13.225 84.3089 13.2385C84.2649 13.2519 84.2247 13.2747 84.1917 13.3052C84.1586 13.3356 84.1337 13.3728 84.1187 13.4137C84.1037 13.4547 84.0991 13.4984 84.1053 13.5414V15.2813C84.0985 15.3247 84.1026 15.369 84.1172 15.4107C84.1318 15.4524 84.1566 15.4904 84.1896 15.5216C84.2226 15.5528 84.2629 15.5765 84.3074 15.5907C84.3518 15.6049 84.3992 15.6093 84.4458 15.6035H90.2466C90.2923 15.6101 90.3391 15.6065 90.383 15.5931C90.427 15.5797 90.4669 15.5567 90.4996 15.5262C90.5323 15.4957 90.5569 15.4584 90.5713 15.4173C90.5856 15.3762 90.5895 15.3326 90.5824 15.2899V15.2813ZM84.271 16.394C84.1317 16.4102 83.9903 16.3964 83.8577 16.3536C83.725 16.3109 83.6046 16.2404 83.5056 16.1475C83.4066 16.0547 83.3317 15.9419 83.2865 15.8178C83.2414 15.6937 83.2272 15.5617 83.2451 15.4317V13.3652C83.229 13.2367 83.2442 13.1065 83.2895 12.9842C83.3348 12.862 83.4091 12.7508 83.5069 12.6591C83.6046 12.5674 83.7233 12.4975 83.854 12.4547C83.9847 12.4118 84.1241 12.397 84.2618 12.4115H90.403C90.5451 12.3925 90.6899 12.4049 90.8259 12.4476C90.962 12.4902 91.0854 12.562 91.1865 12.6572C91.2875 12.7524 91.3633 12.8683 91.4077 12.9957C91.4522 13.1231 91.4642 13.2585 91.4427 13.391V15.4532C91.4612 15.5804 91.4478 15.7099 91.4036 15.8315C91.3594 15.9531 91.2855 16.0635 91.1878 16.1539C91.0902 16.2443 90.9713 16.3122 90.8407 16.3524C90.7101 16.3926 90.5713 16.4039 90.4352 16.3854H84.271V16.394ZM100.312 16.394H92.1143V12.4029H92.9745V15.5949H100.335V16.394H100.312ZM108.339 15.2813V13.5629C108.339 13.3395 108.229 13.2278 107.999 13.2278H102.207C102.161 13.2214 102.114 13.225 102.07 13.2385C102.026 13.2519 101.986 13.2747 101.953 13.3052C101.92 13.3356 101.895 13.3728 101.88 13.4137C101.865 13.4547 101.86 13.4984 101.867 13.5414V15.2813C101.86 15.3247 101.864 15.369 101.879 15.4107C101.893 15.4524 101.918 15.4904 101.951 15.5216C101.984 15.5528 102.024 15.5765 102.069 15.5907C102.113 15.6049 102.161 15.6093 102.207 15.6035H108.031C108.076 15.6094 108.123 15.6052 108.166 15.5915C108.209 15.5777 108.249 15.5547 108.281 15.5242C108.313 15.4938 108.337 15.4567 108.351 15.4161C108.365 15.3754 108.369 15.3322 108.362 15.2899L108.339 15.2813ZM102.051 16.3983C101.912 16.4138 101.771 16.3994 101.639 16.3564C101.507 16.3133 101.387 16.2427 101.289 16.1499C101.19 16.0572 101.116 15.9446 101.071 15.8209C101.026 15.6972 101.012 15.5656 101.029 15.436V13.3695C101.013 13.2414 101.029 13.1116 101.074 12.9897C101.119 12.8678 101.193 12.7569 101.29 12.6653C101.387 12.5737 101.505 12.5037 101.635 12.4605C101.765 12.4173 101.904 12.402 102.042 12.4158H108.183C108.325 12.3968 108.47 12.4092 108.606 12.4519C108.742 12.4945 108.865 12.5663 108.966 12.6615C109.067 12.7567 109.143 12.8726 109.188 13C109.232 13.1274 109.244 13.2628 109.222 13.3953V15.4575C109.241 15.5847 109.228 15.7142 109.183 15.8358C109.139 15.9574 109.065 16.0678 108.968 16.1582C108.87 16.2486 108.751 16.3165 108.62 16.3567C108.49 16.3969 108.351 16.4082 108.215 16.3897H102.051V16.3983ZM113.832 14.7959V13.9925H118.101V15.4059C118.122 15.5376 118.11 15.6721 118.066 15.7987C118.022 15.9254 117.947 16.0408 117.847 16.1358C117.747 16.2308 117.625 16.3028 117.49 16.3461C117.355 16.3894 117.212 16.4029 117.07 16.3854H110.906C110.765 16.4022 110.622 16.3881 110.488 16.3445C110.353 16.3008 110.232 16.2287 110.132 16.1338C110.033 16.0389 109.959 15.9238 109.915 15.7975C109.871 15.6712 109.859 15.5372 109.88 15.4059V13.3566C109.864 13.2289 109.879 13.0995 109.924 12.978C109.969 12.8564 110.043 12.7458 110.139 12.6543C110.236 12.5627 110.353 12.4926 110.483 12.4491C110.612 12.4056 110.751 12.3898 110.888 12.4029H118.069V13.1977H111.072C110.851 13.1977 110.74 13.3137 110.74 13.5414V15.2598C110.74 15.4746 110.851 15.582 111.072 15.582H116.886C116.931 15.5888 116.977 15.5858 117.021 15.5734C117.064 15.561 117.104 15.5395 117.138 15.5105C117.171 15.4814 117.197 15.4457 117.213 15.406C117.229 15.3663 117.235 15.3237 117.231 15.2813V14.8002L113.832 14.7959ZM125.926 16.4026H118.795V15.5949H125.806C126.018 15.5949 126.128 15.4918 126.128 15.2813V14.8044H119.826C119.685 14.8217 119.542 14.8083 119.407 14.7652C119.273 14.7221 119.151 14.6505 119.051 14.5561C118.951 14.4616 118.876 14.3468 118.832 14.2207C118.787 14.0946 118.775 13.9606 118.795 13.8292V12.4072H119.656V13.696C119.656 13.9022 119.771 14.0054 120.005 14.0054H126.128V12.3986H126.988V15.4059C127.012 15.5408 127 15.6789 126.955 15.8088C126.91 15.9387 126.832 16.0567 126.728 16.1529C126.624 16.2491 126.497 16.3207 126.357 16.3619C126.218 16.4031 126.07 16.4126 125.926 16.3897V16.4026Z" fill="#9A9AA5"/>
                            <path d="M99.304 9.60119V8.02913H89.3335V2.00684H86.8886V8.41919C86.8662 8.60135 86.8997 8.78568 86.9854 8.95091C87.071 9.11613 87.2052 9.25552 87.3725 9.35297C87.7123 9.52345 88.0941 9.60899 88.4803 9.60119H99.304ZM99.9407 2.01275V3.58481H112.14V2.00684L99.9407 2.01275ZM99.9407 4.96775V9.60119H112.573V7.91684H102.487V6.54572H109.809V4.96184L99.9407 4.96775ZM113.426 2.01275L118.519 5.66513L113.209 9.60119H116.291L120.111 6.84713L123.816 9.60119H127L121.588 5.66513L126.796 2.00684H123.715L120.111 4.57178L116.495 2.00684L113.426 2.01275Z" fill="#51BEF9"/>
                            <path d="M75.2979 2.00684V3.59072H83.4729H83.5111L83.6257 3.62618C83.7339 3.65573 83.7913 3.70301 83.7913 3.76802V5.05344H76.5712V6.53095H83.7913V9.58051H86.2361V3.18884C86.2432 3.01112 86.1985 2.83492 86.1066 2.67888C86.0147 2.52283 85.879 2.39273 85.714 2.30234C85.3913 2.119 85.0226 2.01714 84.6444 2.00684H75.2979Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M75.3008 4.24609H77.7329V9.57987H75.3008V4.24609Z" fill="#51BEF9"/>
                            <path d="M40.0474 2.21078C39.5292 1.9383 38.9162 1.86612 38.3411 2.00984C37.6386 2.1438 37.2863 2.47476 37.2842 3.00272V9.59829H39.7291V4.07539C40.1321 4.50774 40.5945 4.88922 41.1043 5.21011C41.4959 5.48492 41.8906 5.76565 42.2949 6.05524L43.5492 6.94174C43.9736 6.64033 44.3832 6.34483 44.778 6.05524L45.9304 5.21011C46.3124 4.93234 46.6212 4.70185 46.8536 4.51273C47.086 4.32361 47.2579 4.17586 47.3693 4.07539V9.59533H49.9161V3.00272C49.9161 2.47279 49.5425 2.14183 48.7955 2.00984C48.0484 1.87785 47.5009 1.94483 47.1528 2.21078L43.5492 4.87028L40.0474 2.21078Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M62.2617 2.00391H74.5498V3.58779H62.2617V2.00391Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M67.2529 9.59191H69.8092V2.9668H67.2529V9.59191Z" fill="#51BEF9"/>
                            <path d="M50.6328 2.00684V3.59072H58.8079H58.8461L58.9607 3.62618C59.0689 3.65573 59.1262 3.70301 59.1262 3.76802V5.05344H51.9062V6.53095H59.1262V9.58051H61.5584V3.18884C61.5655 3.01112 61.5207 2.83492 61.4288 2.67888C61.3369 2.52283 61.2013 2.39273 61.0363 2.30234C60.7136 2.119 60.3448 2.01714 59.9666 2.00684H50.6328Z" fill="#51BEF9"/>
                            <path fillRule="evenodd" clipRule="evenodd" d="M50.6357 4.24609H53.0679V9.57987H50.6357V4.24609Z" fill="#51BEF9"/>
                            </g>
                            <defs>
                            <clipPath id="clip0_90_1235">
                            <rect width="127" height="22" fill="white"/>
                            </clipPath>
                            </defs>
                        </svg>
                        <div className='border-l border-l-[#F2F2F5] pl-[15px] text-u-h4 text-gray1 text-[14px] leading-[15px]'>Тюнинг ателье,<br />
                        доставка по всему миру</div>
                    </div>
                    <div className='flex gap-[15px]'>
                        <div className='h-full flex gap-[10px] items-center px-[5px]'>
                                    <Link href={'https://vk.com/matalex_official?from=search'}>
                                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M1.68 1.68C3.17891e-07 3.376 0 6.088 0 11.52V12.48C0 17.904 3.17891e-07 20.616 1.68 22.32C3.376 24 6.088 24 11.52 24H12.48C17.904 24 20.616 24 22.32 22.32C24 20.624 24 17.912 24 12.48V11.52C24 6.096 24 3.384 22.32 1.68C20.624 3.17891e-07 17.912 0 12.48 0H11.52C6.096 0 3.384 3.17891e-07 1.68 1.68ZM4.048 7.304H6.8C6.888 11.88 8.904 13.816 10.504 14.216V7.304H13.088V11.248C14.664 11.08 16.328 9.28 16.888 7.296H19.464C19.254 8.32304 18.8345 9.29574 18.2316 10.1533C17.6287 11.0109 16.8554 11.7348 15.96 12.28C16.9592 12.7772 17.8417 13.4806 18.5491 14.3438C19.2566 15.2071 19.7729 16.2105 20.064 17.288H17.224C16.616 15.392 15.096 13.92 13.088 13.72V17.288H12.768C7.296 17.288 4.176 13.544 4.048 7.304Z" fill="#51BEF9"/>
                                    </svg>
                                    </Link>
                                    <Link href={'https://t.me/matalextuning'}>
                                    <svg width="28" height="28" viewBox="0 0 28 28" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M14.0001 0.666687C6.64008 0.666687 0.666748 6.64002 0.666748 14C0.666748 21.36 6.64008 27.3334 14.0001 27.3334C21.3601 27.3334 27.3334 21.36 27.3334 14C27.3334 6.64002 21.3601 0.666687 14.0001 0.666687ZM20.1867 9.73335C19.9867 11.84 19.1201 16.96 18.6801 19.32C18.4934 20.32 18.1201 20.6534 17.7734 20.6934C17.0001 20.76 16.4134 20.1867 15.6667 19.6934C14.4934 18.92 13.8267 18.44 12.6934 17.6934C11.3734 16.8267 12.2267 16.3467 12.9867 15.5734C13.1867 15.3734 16.6001 12.2667 16.6667 11.9867C16.676 11.9443 16.6748 11.9003 16.6632 11.8584C16.6515 11.8166 16.6299 11.7782 16.6001 11.7467C16.5201 11.68 16.4134 11.7067 16.3201 11.72C16.2001 11.7467 14.3334 12.9867 10.6934 15.44C10.1601 15.8 9.68008 15.9867 9.25341 15.9734C8.77341 15.96 7.86675 15.7067 7.18675 15.48C6.34675 15.2134 5.69341 15.0667 5.74675 14.6C5.77341 14.36 6.10675 14.12 6.73342 13.8667C10.6267 12.1734 13.2134 11.0534 14.5067 10.52C18.2134 8.97335 18.9734 8.70669 19.4801 8.70669C19.5868 8.70669 19.8401 8.73335 20.0001 8.86669C20.1334 8.97335 20.1734 9.12002 20.1867 9.22669C20.1734 9.30669 20.2001 9.54669 20.1867 9.73335Z" fill="#51BEF9"/>
                                    </svg>
                                    </Link>
                                    <Link href={'https://www.youtube.com/channel/UC3vbfTipX1VSm_tSN9pKJrQ'}>
                                    <svg width="28" height="20" viewBox="0 0 28 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M11.3334 14L18.2534 10L11.3334 6.00002V14ZM26.7467 3.56002C26.9201 4.18669 27.0401 5.02669 27.1201 6.09335C27.2134 7.16002 27.2534 8.08002 27.2534 8.88002L27.3334 10C27.3334 12.92 27.1201 15.0667 26.7467 16.44C26.4134 17.64 25.6401 18.4134 24.4401 18.7467C23.8134 18.92 22.6667 19.04 20.9067 19.12C19.1734 19.2134 17.5867 19.2534 16.1201 19.2534L14.0001 19.3334C8.41341 19.3334 4.93341 19.12 3.56008 18.7467C2.36008 18.4134 1.58675 17.64 1.25341 16.44C1.08008 15.8134 0.960081 14.9734 0.880082 13.9067C0.786748 12.84 0.746748 11.92 0.746748 11.12L0.666748 10C0.666748 7.08002 0.880081 4.93335 1.25341 3.56002C1.58675 2.36002 2.36008 1.58669 3.56008 1.25335C4.18675 1.08002 5.33342 0.96002 7.09342 0.88002C8.82675 0.786687 10.4134 0.746687 11.8801 0.746687L14.0001 0.666687C19.5867 0.666687 23.0667 0.88002 24.4401 1.25335C25.6401 1.58669 26.4134 2.36002 26.7467 3.56002Z" fill="#51BEF9"/>
                                    </svg>
                                    </Link>
                        </div>
                        <div className='max-w-[180px] flex flex-col'>
                            <Link href={'tel:+7 (985) 425-16-36'} className='text-[#007DBF] text-nowrap text-u-h4'>+7 (985) 425-16-36</Link>
                            <Link href={'https://yandex.ru/maps/213/moscow/house/sovetskaya_ulitsa_80s9/Z04YcQJiTEYCQFtvfXt4dHtjZg==/?ll=37.752535%2C55.795702&z=17.64'} className='text-gray1 leading-[16px]'>Советская ул.,
                                80, стр. 9  10:00-21:00</Link>
                        </div>
                    </div>
                    </div>
                    <div className='flex items-center justify-between h-[50px] w-full'>

                        <div className=' h-full hidden l:block'>
                            <nav className=' h-full'>
                                <div className='flex h-full items-center'>
                                    {list.map((link: any, index) => (
                                        <Link href={link.url} key={index} className={path != link.url ? 'navItem' : 'navItem_active'}>{link.title}<div className={path != link.url ? '' : 'line'}></div></Link>
                                    ))}
                                </div>
                            </nav>
                        </div>
                        <div className=' h-[30px] gap-[5px] hidden l:flex'>
                            <Link href={'/search'}><button onClick={() => {}} className='btn__d p-[5px_22px]'><Icon type='search'/></button></Link>
                            {basket && basket?.appointments?.length > 0 || basket?.products?.length > 0 ? <Link href={'/basket'} className='btn__p p-[3px_15px] gap-[5px] flex items-center'><p className='h-full text-i-p2 flex items-center justify-center'>{insertSpaces(`${sum}`)}₽</p> <Icon type='bag'/></Link> : <button disabled className='btn__p p-[5px_15px]'><Icon type='bag'/></button>}
                            {!loaded ? <button className='btn__s text-i-p2 p-[3px_15px]' onClick={() => {
                                if(!isAuth) {
                                    dispatch(setModal(true))
                                    dispatch(setModalLink(null))
                                }
                            }}>Войти</button> : <Link href={'/profile'} className='btn__r p-[5px_19px]'><Icon type='user'/></Link>}
                        </div>
                        <div className='flex l:hidden justify-between items-center w-full h-full gap-[5px]'>
                            <div  onClick={() => {
                        setClose(false)
                        dispatch(onChangeModal(false))
                        handleClick()
                    }}><svg width="127" height="22" viewBox="0 0 127 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g clipPath="url(#clip0_90_1235)">
                                <path fillRule="evenodd" clipRule="evenodd" d="M8.95508 2.58858L21.3609 8.59315L33.4261 2.54426L33.5949 13.8797L21.3577 19.9847L18.1361 18.584L17.509 20.029L21.3482 22L35.2725 14.9198L35.1293 0L21.3482 7.08019L7.33789 0.01182L7.36018 14.843L15.93 19.0982L17.6172 18.3594L8.90732 14.0599L8.95508 2.58858Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M18.6803 6.22884L17.582 5.17982L27.9855 0.0351562L28.0205 4.12193L26.3428 4.65974V2.56464L18.6803 6.22884Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M15.411 17.269L15.1977 18.7347L16.0859 19.1898L14.023 20.1413L1.76362 14.0481L1.78591 2.55312L7.69755 5.4904L7.50654 3.58442L0.0477515 0L0 14.7868L13.9243 21.8877L19.4221 19.1425L15.411 17.269Z" fill="#51BEF9"/>
                                <path d="M42.7082 16.3983H41.6962V13.2149H37.418V12.4072H46.9772V13.202H42.7082V16.3983ZM55.8556 16.3983H47.6672V12.4072H55.8648V13.202H48.5274V13.9925H55.8648V14.7916H48.5274V15.5863H55.8648V16.3854L55.8556 16.3983ZM64.7523 16.3983H57.576C56.9044 16.3983 56.5732 16.0761 56.5732 15.4274V13.3566C56.5532 13.2291 56.5654 13.0991 56.6087 12.9767C56.6519 12.8544 56.7251 12.7431 56.8225 12.6518C56.9198 12.5605 57.0386 12.4916 57.1694 12.4506C57.3002 12.4097 57.4394 12.3977 57.576 12.4158H64.7615V13.2106H57.7692C57.724 13.2036 57.6777 13.2065 57.634 13.2191C57.5902 13.2318 57.5502 13.2538 57.5172 13.2834C57.4841 13.313 57.4589 13.3494 57.4436 13.3897C57.4282 13.43 57.4232 13.4731 57.4288 13.5156V15.2813C57.4288 15.4961 57.5392 15.6035 57.7554 15.6035H64.7615V16.4026L64.7523 16.3983ZM73.6445 16.3983H72.7935V14.8044H66.3118V16.3983H65.4654V12.4158H66.3118V13.9925H72.8027V12.4029H73.6537V16.3854L73.6445 16.3983ZM81.681 16.3983H82.5459V12.4244H81.6856V15.4618L75.204 12.4158H74.3437V16.4069H75.1948V13.3352L81.6672 16.3983H81.681ZM90.5824 15.2813V13.5629C90.5824 13.3395 90.4674 13.2278 90.242 13.2278H84.4458C84.3999 13.2214 84.3531 13.225 84.3089 13.2385C84.2649 13.2519 84.2247 13.2747 84.1917 13.3052C84.1586 13.3356 84.1337 13.3728 84.1187 13.4137C84.1037 13.4547 84.0991 13.4984 84.1053 13.5414V15.2813C84.0985 15.3247 84.1026 15.369 84.1172 15.4107C84.1318 15.4524 84.1566 15.4904 84.1896 15.5216C84.2226 15.5528 84.2629 15.5765 84.3074 15.5907C84.3518 15.6049 84.3992 15.6093 84.4458 15.6035H90.2466C90.2923 15.6101 90.3391 15.6065 90.383 15.5931C90.427 15.5797 90.4669 15.5567 90.4996 15.5262C90.5323 15.4957 90.5569 15.4584 90.5713 15.4173C90.5856 15.3762 90.5895 15.3326 90.5824 15.2899V15.2813ZM84.271 16.394C84.1317 16.4102 83.9903 16.3964 83.8577 16.3536C83.725 16.3109 83.6046 16.2404 83.5056 16.1475C83.4066 16.0547 83.3317 15.9419 83.2865 15.8178C83.2414 15.6937 83.2272 15.5617 83.2451 15.4317V13.3652C83.229 13.2367 83.2442 13.1065 83.2895 12.9842C83.3348 12.862 83.4091 12.7508 83.5069 12.6591C83.6046 12.5674 83.7233 12.4975 83.854 12.4547C83.9847 12.4118 84.1241 12.397 84.2618 12.4115H90.403C90.5451 12.3925 90.6899 12.4049 90.8259 12.4476C90.962 12.4902 91.0854 12.562 91.1865 12.6572C91.2875 12.7524 91.3633 12.8683 91.4077 12.9957C91.4522 13.1231 91.4642 13.2585 91.4427 13.391V15.4532C91.4612 15.5804 91.4478 15.7099 91.4036 15.8315C91.3594 15.9531 91.2855 16.0635 91.1878 16.1539C91.0902 16.2443 90.9713 16.3122 90.8407 16.3524C90.7101 16.3926 90.5713 16.4039 90.4352 16.3854H84.271V16.394ZM100.312 16.394H92.1143V12.4029H92.9745V15.5949H100.335V16.394H100.312ZM108.339 15.2813V13.5629C108.339 13.3395 108.229 13.2278 107.999 13.2278H102.207C102.161 13.2214 102.114 13.225 102.07 13.2385C102.026 13.2519 101.986 13.2747 101.953 13.3052C101.92 13.3356 101.895 13.3728 101.88 13.4137C101.865 13.4547 101.86 13.4984 101.867 13.5414V15.2813C101.86 15.3247 101.864 15.369 101.879 15.4107C101.893 15.4524 101.918 15.4904 101.951 15.5216C101.984 15.5528 102.024 15.5765 102.069 15.5907C102.113 15.6049 102.161 15.6093 102.207 15.6035H108.031C108.076 15.6094 108.123 15.6052 108.166 15.5915C108.209 15.5777 108.249 15.5547 108.281 15.5242C108.313 15.4938 108.337 15.4567 108.351 15.4161C108.365 15.3754 108.369 15.3322 108.362 15.2899L108.339 15.2813ZM102.051 16.3983C101.912 16.4138 101.771 16.3994 101.639 16.3564C101.507 16.3133 101.387 16.2427 101.289 16.1499C101.19 16.0572 101.116 15.9446 101.071 15.8209C101.026 15.6972 101.012 15.5656 101.029 15.436V13.3695C101.013 13.2414 101.029 13.1116 101.074 12.9897C101.119 12.8678 101.193 12.7569 101.29 12.6653C101.387 12.5737 101.505 12.5037 101.635 12.4605C101.765 12.4173 101.904 12.402 102.042 12.4158H108.183C108.325 12.3968 108.47 12.4092 108.606 12.4519C108.742 12.4945 108.865 12.5663 108.966 12.6615C109.067 12.7567 109.143 12.8726 109.188 13C109.232 13.1274 109.244 13.2628 109.222 13.3953V15.4575C109.241 15.5847 109.228 15.7142 109.183 15.8358C109.139 15.9574 109.065 16.0678 108.968 16.1582C108.87 16.2486 108.751 16.3165 108.62 16.3567C108.49 16.3969 108.351 16.4082 108.215 16.3897H102.051V16.3983ZM113.832 14.7959V13.9925H118.101V15.4059C118.122 15.5376 118.11 15.6721 118.066 15.7987C118.022 15.9254 117.947 16.0408 117.847 16.1358C117.747 16.2308 117.625 16.3028 117.49 16.3461C117.355 16.3894 117.212 16.4029 117.07 16.3854H110.906C110.765 16.4022 110.622 16.3881 110.488 16.3445C110.353 16.3008 110.232 16.2287 110.132 16.1338C110.033 16.0389 109.959 15.9238 109.915 15.7975C109.871 15.6712 109.859 15.5372 109.88 15.4059V13.3566C109.864 13.2289 109.879 13.0995 109.924 12.978C109.969 12.8564 110.043 12.7458 110.139 12.6543C110.236 12.5627 110.353 12.4926 110.483 12.4491C110.612 12.4056 110.751 12.3898 110.888 12.4029H118.069V13.1977H111.072C110.851 13.1977 110.74 13.3137 110.74 13.5414V15.2598C110.74 15.4746 110.851 15.582 111.072 15.582H116.886C116.931 15.5888 116.977 15.5858 117.021 15.5734C117.064 15.561 117.104 15.5395 117.138 15.5105C117.171 15.4814 117.197 15.4457 117.213 15.406C117.229 15.3663 117.235 15.3237 117.231 15.2813V14.8002L113.832 14.7959ZM125.926 16.4026H118.795V15.5949H125.806C126.018 15.5949 126.128 15.4918 126.128 15.2813V14.8044H119.826C119.685 14.8217 119.542 14.8083 119.407 14.7652C119.273 14.7221 119.151 14.6505 119.051 14.5561C118.951 14.4616 118.876 14.3468 118.832 14.2207C118.787 14.0946 118.775 13.9606 118.795 13.8292V12.4072H119.656V13.696C119.656 13.9022 119.771 14.0054 120.005 14.0054H126.128V12.3986H126.988V15.4059C127.012 15.5408 127 15.6789 126.955 15.8088C126.91 15.9387 126.832 16.0567 126.728 16.1529C126.624 16.2491 126.497 16.3207 126.357 16.3619C126.218 16.4031 126.07 16.4126 125.926 16.3897V16.4026Z" fill="#9A9AA5"/>
                                <path d="M99.304 9.60119V8.02913H89.3335V2.00684H86.8886V8.41919C86.8662 8.60135 86.8997 8.78568 86.9854 8.95091C87.071 9.11613 87.2052 9.25552 87.3725 9.35297C87.7123 9.52345 88.0941 9.60899 88.4803 9.60119H99.304ZM99.9407 2.01275V3.58481H112.14V2.00684L99.9407 2.01275ZM99.9407 4.96775V9.60119H112.573V7.91684H102.487V6.54572H109.809V4.96184L99.9407 4.96775ZM113.426 2.01275L118.519 5.66513L113.209 9.60119H116.291L120.111 6.84713L123.816 9.60119H127L121.588 5.66513L126.796 2.00684H123.715L120.111 4.57178L116.495 2.00684L113.426 2.01275Z" fill="#51BEF9"/>
                                <path d="M75.2979 2.00684V3.59072H83.4729H83.5111L83.6257 3.62618C83.7339 3.65573 83.7913 3.70301 83.7913 3.76802V5.05344H76.5712V6.53095H83.7913V9.58051H86.2361V3.18884C86.2432 3.01112 86.1985 2.83492 86.1066 2.67888C86.0147 2.52283 85.879 2.39273 85.714 2.30234C85.3913 2.119 85.0226 2.01714 84.6444 2.00684H75.2979Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M75.3008 4.24609H77.7329V9.57987H75.3008V4.24609Z" fill="#51BEF9"/>
                                <path d="M40.0474 2.21078C39.5292 1.9383 38.9162 1.86612 38.3411 2.00984C37.6386 2.1438 37.2863 2.47476 37.2842 3.00272V9.59829H39.7291V4.07539C40.1321 4.50774 40.5945 4.88922 41.1043 5.21011C41.4959 5.48492 41.8906 5.76565 42.2949 6.05524L43.5492 6.94174C43.9736 6.64033 44.3832 6.34483 44.778 6.05524L45.9304 5.21011C46.3124 4.93234 46.6212 4.70185 46.8536 4.51273C47.086 4.32361 47.2579 4.17586 47.3693 4.07539V9.59533H49.9161V3.00272C49.9161 2.47279 49.5425 2.14183 48.7955 2.00984C48.0484 1.87785 47.5009 1.94483 47.1528 2.21078L43.5492 4.87028L40.0474 2.21078Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M62.2617 2.00391H74.5498V3.58779H62.2617V2.00391Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M67.2529 9.59191H69.8092V2.9668H67.2529V9.59191Z" fill="#51BEF9"/>
                                <path d="M50.6328 2.00684V3.59072H58.8079H58.8461L58.9607 3.62618C59.0689 3.65573 59.1262 3.70301 59.1262 3.76802V5.05344H51.9062V6.53095H59.1262V9.58051H61.5584V3.18884C61.5655 3.01112 61.5207 2.83492 61.4288 2.67888C61.3369 2.52283 61.2013 2.39273 61.0363 2.30234C60.7136 2.119 60.3448 2.01714 59.9666 2.00684H50.6328Z" fill="#51BEF9"/>
                                <path fillRule="evenodd" clipRule="evenodd" d="M50.6357 4.24609H53.0679V9.57987H50.6357V4.24609Z" fill="#51BEF9"/>
                                </g>
                                <defs>
                                <clipPath id="clip0_90_1235">
                                <rect width="127" height="22" fill="white"/>
                                </clipPath>
                                </defs>
                            </svg></div>
                            <button className='btn__s p-[9px_15px]' onClick={() => closeFunc()}>{close ? <Icon type='close'/> : <Icon type='burger'/>}</button>
                        </div>
                    </div>
                </div>
            </div>
            </>
        )
    }
    //
    return (
        <div className='z-[40]'>
            {/* {authModal && <Modal isOpen={authModal} onClose={() => {
                dispatch(setModal(false))
                setAuthModal(false)
            }}><Auth onClose={() => {
                dispatch(setModal(false))
                setAuthModal(false)
            }}/></Modal>} */}
            <div className={isVisible ? `w-full flex justify-center fixed top-0 left-0 h-[70px] l:h-[145px] bg-white` : 'hidden'}>
                <HeaderContent />
            </div>
            <div style={{paddingTop: basepath === 'home' ? '7px' : '0px'}} className={`bg-white w-full flex justify-center top-0 left-0 h-[70px] l:h-[145px]`}>
                <HeaderContent />
            </div>
        </div>
    )
}

export default Header